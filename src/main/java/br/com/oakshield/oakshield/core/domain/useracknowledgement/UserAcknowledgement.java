package br.com.oakshield.oakshield.core.domain.useracknowledgement;

import br.com.oakshield.oakshield.core.domain.policy.Policy;
import br.com.oakshield.oakshield.core.domain.audit.AuditDomain;
import br.com.oakshield.oakshield.core.domain.user.User;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.persistence.*;
import lombok.*;

import java.time.LocalDateTime;
import java.util.UUID;

@Entity
@Table(name = "tb_user_acknowledgement", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"user_id", "policy_id"})
})
@Inheritance(strategy = InheritanceType.JOINED)
@Data
@Builder
@EqualsAndHashCode(callSuper = true)
@NoArgsConstructor
@AllArgsConstructor
@ToString(callSuper = true)
@Schema(description = "User Acknowledgement Entity", name = "Asset")
@Tag(name = "User Acknowledgement Entity", description = "Operations related to assets")
public class UserAcknowledgement extends AuditDomain {

    @Schema(description = "ID da confirma√ß√£o do usu√°rio", example = "123e4567-e89b-12d3-a456-426614174000")
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;

    @Schema(description = "ID do usu√°rio que reconheceu a pol√≠tica", example = "123e4567-e89b-12d3-a456-426614174000")
    @ManyToOne
    @JoinColumn(name = "user_id", referencedColumnName = "id", nullable = false)
    private User user;

    @Schema(description = "ID da pol√≠tica reconhecida pelo usu√°rio", example = "123e4567-e89b-12d3-a456-426614174000")
    @ManyToOne
    @JoinColumn(name = "policy_id", referencedColumnName = "id", nullable = false)
    private Policy policy;

    @Schema(description = "Data em que o usu√°rio reconheceu a pol√≠tica", example = "2023-10-01")
    @Column(name = "acknowledged_at", nullable = false)
    private LocalDateTime acknowledgedAt;

}

/*
A classe UserAcknowledgement representa o registro do aceite de uma pol√≠tica de seguran√ßa por um usu√°rio, ou seja, quem leu e confirmou o conhecimento ou concord√¢ncia com determinada pol√≠tica da organiza√ß√£o.

        üìå Objetivo principal
Registrar quando um usu√°rio reconheceu formalmente uma pol√≠tica, como:

Pol√≠tica de Seguran√ßa da Informa√ß√£o

Pol√≠tica de Controle de Acesso

C√≥digo de Conduta etc.

Isso √© crucial para conformidade com a ISO/IEC 27001, LGPD, GDPR e auditorias internas ou externas.

        üß© O que essa classe faz exatamente?
Elemento	Fun√ß√£o
@Entity	Indica que a classe √© uma entidade JPA persistida no banco de dados
@Table(...)	Define o nome da tabela e uma restri√ß√£o de unicidade (user_id, policy_id) para evitar duplicatas
id	Identificador √∫nico do aceite
userId	ID do usu√°rio que aceitou a pol√≠tica
policyId	ID da pol√≠tica que foi aceita
acknowledgedAt	Data em que o aceite ocorreu
extends AuditDomain	Herdando dados de auditoria como createdAt, updatedAt, etc.

‚úÖ Exemplo pr√°tico de uso:
Vamos imaginar que a empresa publique uma nova pol√≠tica de backup. Quando o usu√°rio acessa o sistema, ele √© solicitado a ler a pol√≠tica e clicar em "Li e concordo". Ao fazer isso, um registro do tipo UserAcknowledgement √© criado com:

userId = ID do colaborador

        policyId = ID da pol√≠tica de backup

acknowledgedAt = Data e hora atual

Esse registro pode ser usado depois em relat√≥rios de conformidade como:

        ‚Äú90% dos usu√°rios reconheceram a Pol√≠tica de Backup at√© 01/08/2025.‚Äù

        üîí Por que isso √© importante?
Ajuda a provar que os usu√°rios est√£o cientes das pol√≠ticas.

Garante rastreabilidade em auditorias.

Facilita o gerenciamento de conformidade cont√≠nua com normas como a ISO 27001.

*/
